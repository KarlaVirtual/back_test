name: Versionado y generación de imagen en Oracle

on:
  push:
    branches:
      - main

jobs:
  release-and-generate-image:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_PUSH_TOKEN }}

      - name: Configurar Git
        run: |
          git config --global user.name "KarlaVirtual"
          git config --global user.email "karla.ramirez@virtualsoft.tech"

      - name: Instalar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '21'

      - name: Instalar dependencias
        run: |
          npm install

      - name: Ejecutar semantic-release
        run: |
          npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Extraer versión desde el tag más reciente
        id: extract_version
        run: |
          VERSION=$(git describe --tags --abbrev=0)
          echo "Versión detectada: $VERSION"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Construir imagen en Oracle con la versión
        run: |
          IMAGE_NAME="back_test-${{ steps.extract_version.outputs.version }}"
          echo "Generando imagen en Oracle con nombre: $IMAGE_NAME"

          # Aquí se haría la llamada real a Oracle
          # curl -X POST "https://oracle-api/imagen/build" -H "Authorization: Bearer ${{ secrets.ORACLE_API_TOKEN }}" \
          # -d "{\"image_name\":\"$IMAGE_NAME\"}"

      - name: Notificar en Slack (opcional)
        run: |
          IMAGE_NAME="back_test-${{ steps.extract_version.outputs.version }}"
          SLACK_MESSAGE=":rocket: Imagen *$IMAGE_NAME* generada exitosamente en Oracle."

          curl -X POST -H 'Content-type: application/json' \
            --data "{\"text\":\"$SLACK_MESSAGE\"}" \
            "${{ secrets.SLACK_WEBHOOK_URL }}"
