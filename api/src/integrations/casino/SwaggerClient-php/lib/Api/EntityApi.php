<?php
/**
 * EntityApi
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * GoldenRace External API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 0.1.3-SNAPSHOT
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Api;

use \Swagger\Client\ApiClient;
use \Swagger\Client\ApiException;
use \Swagger\Client\Configuration;
use \Swagger\Client\ObjectSerializer;

/**
 * EntityApi Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EntityApi
{
    /**
     * API Client
     *
     * @var \Swagger\Client\ApiClient instance of the ApiClient
     */
    protected $apiClient;

    /**
     * Constructor
     *
     * @param \Swagger\Client\ApiClient|null $apiClient The api client to use
     */
    public function __construct(\Swagger\Client\ApiClient $apiClient = null)
    {
        if ($apiClient === null) {
            $apiClient = new ApiClient();
        }

        $this->apiClient = $apiClient;
    }

    /**
     * Get API client
     *
     * @return \Swagger\Client\ApiClient get the API client
     */
    public function getApiClient()
    {
        return $this->apiClient;
    }

    /**
     * Set the API client
     *
     * @param \Swagger\Client\ApiClient $apiClient set the API client
     *
     * @return EntityApi
     */
    public function setApiClient(\Swagger\Client\ApiClient $apiClient)
    {
        $this->apiClient = $apiClient;
        return $this;
    }

    /**
     * Operation entityAdd
     *
     * 
     *
     * @param int $entity_parent_id The parent entity id. (required)
     * @param string $entity_name The name to be assigned to the entity. (required)
     * @param string $ext_id External unique id of account, for 3rd party integrations. (optional)
     * @param string $ext_data Information in json format so that the client can store any type in information that requires for its use. (optional)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return \Swagger\Client\Model\AuthResultClient
     */
    public function entityAdd($entity_parent_id, $entity_name, $ext_id = null, $ext_data = null)
    {
        list($response) = $this->entityAddWithHttpInfo($entity_parent_id, $entity_name, $ext_id, $ext_data);
        return $response;
    }

    /**
     * Operation entityAddWithHttpInfo
     *
     * 
     *
     * @param int $entity_parent_id The parent entity id. (required)
     * @param string $entity_name The name to be assigned to the entity. (required)
     * @param string $ext_id External unique id of account, for 3rd party integrations. (optional)
     * @param string $ext_data Information in json format so that the client can store any type in information that requires for its use. (optional)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return array of \Swagger\Client\Model\AuthResultClient, HTTP status code, HTTP response headers (array of strings)
     */
    public function entityAddWithHttpInfo($entity_parent_id, $entity_name, $ext_id = null, $ext_data = null)
    {
        // verify the required parameter 'entity_parent_id' is set
        if ($entity_parent_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $entity_parent_id when calling entityAdd');
        }
        // verify the required parameter 'entity_name' is set
        if ($entity_name === null) {
            throw new \InvalidArgumentException('Missing the required parameter $entity_name when calling entityAdd');
        }
        // parse inputs
        $resourcePath = "/entity/add";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($entity_parent_id !== null) {
            $queryParams['entityParentId'] = $this->apiClient->getSerializer()->toQueryValue($entity_parent_id);
        }
        // query params
        if ($entity_name !== null) {
            $queryParams['entityName'] = $this->apiClient->getSerializer()->toQueryValue($entity_name);
        }
        // query params
        if ($ext_id !== null) {
            $queryParams['extId'] = $this->apiClient->getSerializer()->toQueryValue($ext_id);
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        // body params
        $_tempBody = null;
        if (isset($ext_data)) {
            $_tempBody = $ext_data;
        }

        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (oldCount($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiHash');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiHash'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiId');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiId'] = $apiKey;
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Swagger\Client\Model\AuthResultClient',
                '/entity/add'
            );

            return [$this->apiClient->getSerializer()->deserialize($response, '\Swagger\Client\Model\AuthResultClient', $httpHeader), $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\AuthResultClient', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 510:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation entityApplyConfiguration
     *
     * 
     *
     * @param int $entity_id The id of the entity. (required)
     * @param string $currency_code The currency code to be selected between - EUR  - GBP  - USD  - AUD  - BRL  - NZD  - CAD  - CHF  - CNY  - DKK  - HKD  - INR  - JPY  - KRW  - LKR  - MXN  - MYR  - NOK  - SEK  - SGD  - THB  - TWD  - VEF  - ZAR  - BGN  - CZK  - EEK  - HUF  - LTL  - LVL  - PLN  - RON  - SKK  - ISK  - HRK  - RUB  - TRY  - PHP  - COP  - ARS  - RWF  - BIF  - CRC  - KES  - PEN  - DOP  - BYR  - UAH  - NAD  - GEL  - PRB  - MDL  - KZT  - MUR  - KGS  - IEP  - MKD  - RSD  - AZN  - MGA  - BAM  - TJS  - ALL  - SRD  - NIO  - GHS  - XAF  - GMD  - IQD  - IRR  - NGN  - AMD  - HTG  - GTQ  - ZMW  - GOLD (required)
     * @param string $language The language code to be selected between - ww-WW   - en-GB   - nl-NL   - de-DE   - tr-TR   - es-ES   - pt-PT   - pl-PL   - ka-GE   - hi-IN   - it-IT   - ar-AE   - el-GR   - zh-CN   - ru-KIN  - ro-RO   - ru-RU   - sk-SK   - cs-CZ   - sq-AL   - da-DK   - fi-FI   - fr-FR   - nb-NO   - sv-SE   - sl-SI   - hu-HU   - sw-KE   - ne-NE   - fr-bel  - du-bel  - es-DR   - es-CR   - uk-ukr  - ja-jpn  - ko-nko  - lt-lit  - et-est  - sa-afr  - es-COL  - bu-run  - ug-swa  - ta-swa  - na-afr  - bel-bel - ko-sko  - es-mex  - kk-kaz  - es-arg  - en-aus  - vi-vie  - lv-lav  - tl-tgl  - id-ind  - bel-rus - pan-sp  - cyp-gr  - bg-bul  - es-ven  - ru-mos  - ky-rus  - rb-RB   - uk-RU   - az-AZ   - mk-MKD (required)
     * @param string $timezone The timezone to be selected between - \&quot;Africa/Abidjan\&quot; - \&quot;Africa/Accra\&quot; - \&quot;Africa/Addis_Ababa\&quot; - \&quot;Africa/Algiers\&quot; - \&quot;Africa/Asmara\&quot; - \&quot;Africa/Asmera\&quot; - \&quot;Africa/Bamako\&quot; - \&quot;Africa/Bangui\&quot; - \&quot;Africa/Banjul\&quot; - \&quot;Africa/Bissau\&quot; - \&quot;Africa/Blantyre\&quot; - \&quot;Africa/Brazzaville\&quot; - \&quot;Africa/Bujumbura\&quot; - \&quot;Africa/Cairo\&quot; - \&quot;Africa/Casablanca\&quot; - \&quot;Africa/Ceuta\&quot; - \&quot;Africa/Conakry\&quot; - \&quot;Africa/Dakar\&quot; - \&quot;Africa/Dar_es_Salaam\&quot; - \&quot;Africa/Djibouti\&quot; - \&quot;Africa/Douala\&quot; - \&quot;Africa/El_Aaiun\&quot; - \&quot;Africa/Freetown\&quot; - \&quot;Africa/Gaborone\&quot; - \&quot;Africa/Harare\&quot; - \&quot;Africa/Johannesburg\&quot; - \&quot;Africa/Juba\&quot; - \&quot;Africa/Kampala\&quot; - \&quot;Africa/Khartoum\&quot; - \&quot;Africa/Kigali\&quot; - \&quot;Africa/Kinshasa\&quot; - \&quot;Africa/Lagos\&quot; - \&quot;Africa/Libreville\&quot; - \&quot;Africa/Lome\&quot; - \&quot;Africa/Luanda\&quot; - \&quot;Africa/Lubumbashi\&quot; - \&quot;Africa/Lusaka\&quot; - \&quot;Africa/Malabo\&quot; - \&quot;Africa/Maputo\&quot; - \&quot;Africa/Maseru\&quot; - \&quot;Africa/Mbabane\&quot; - \&quot;Africa/Mogadishu\&quot; - \&quot;Africa/Monrovia\&quot; - \&quot;Africa/Nairobi\&quot; - \&quot;Africa/Ndjamena\&quot; - \&quot;Africa/Niamey\&quot; - \&quot;Africa/Nouakchott\&quot; - \&quot;Africa/Ouagadougou\&quot; - \&quot;Africa/Porto-Novo\&quot; - \&quot;Africa/Sao_Tome\&quot; - \&quot;Africa/Timbuktu\&quot; - \&quot;Africa/Tripoli\&quot; - \&quot;Africa/Tunis\&quot; - \&quot;Africa/Windhoek\&quot; - \&quot;America/Adak\&quot; - \&quot;America/Anchorage\&quot; - \&quot;America/Anguilla\&quot; - \&quot;America/Antigua\&quot; - \&quot;America/Araguaina\&quot; - \&quot;America/Argentina/Buenos_Aires\&quot; - \&quot;America/Argentina/Catamarca\&quot; - \&quot;America/Argentina/ComodRivadavia\&quot; - \&quot;America/Argentina/Cordoba\&quot; - \&quot;America/Argentina/Jujuy\&quot; - \&quot;America/Argentina/La_Rioja\&quot; - \&quot;America/Argentina/Mendoza\&quot; - \&quot;America/Argentina/Rio_Gallegos\&quot; - \&quot;America/Argentina/Salta\&quot; - \&quot;America/Argentina/San_Juan\&quot; - \&quot;America/Argentina/San_Luis\&quot; - \&quot;America/Argentina/Tucuman\&quot; - \&quot;America/Argentina/Ushuaia\&quot; - \&quot;America/Aruba\&quot; - \&quot;America/Asuncion\&quot; - \&quot;America/Atikokan\&quot; - \&quot;America/Atka\&quot; - \&quot;America/Bahia\&quot; - \&quot;America/Bahia_Banderas\&quot; - \&quot;America/Barbados\&quot; - \&quot;America/Belem\&quot; - \&quot;America/Belize\&quot; - \&quot;America/Blanc-Sablon\&quot; - \&quot;America/Boa_Vista\&quot; - \&quot;America/Bogota\&quot; - \&quot;America/Boise\&quot; - \&quot;America/Buenos_Aires\&quot; - \&quot;America/Cambridge_Bay\&quot; - \&quot;America/Campo_Grande\&quot; - \&quot;America/Cancun\&quot; - \&quot;America/Caracas\&quot; - \&quot;America/Catamarca\&quot; - \&quot;America/Cayenne\&quot; - \&quot;America/Cayman\&quot; - \&quot;America/Chicago\&quot; - \&quot;America/Chihuahua\&quot; - \&quot;America/Coral_Harbour\&quot; - \&quot;America/Cordoba\&quot; - \&quot;America/Costa_Rica\&quot; - \&quot;America/Creston\&quot; - \&quot;America/Cuiaba\&quot; - \&quot;America/Curacao\&quot; - \&quot;America/Danmarkshavn\&quot; - \&quot;America/Dawson,\&quot; - \&quot;America/Dawson_Creek\&quot; - \&quot;America/Denver\&quot; - \&quot;America/Detroit\&quot; - \&quot;America/Dominica\&quot; - \&quot;America/Edmonton\&quot; - \&quot;America/Eirunepe\&quot; - \&quot;America/El_Salvador\&quot; - \&quot;America/Ensenada,\&quot; - \&quot;America/Fort_Nelson\&quot; - \&quot;America/Fort_Wayne\&quot; - \&quot;America/Fortaleza\&quot; - \&quot;America/Glace_Bay\&quot; - \&quot;America/Godthab\&quot; - \&quot;America/Goose_Bay\&quot; - \&quot;America/Grand_Turk\&quot; - \&quot;America/Grenada\&quot; - \&quot;America/Guadeloupe\&quot; - \&quot;America/Guatemala\&quot; - \&quot;America/Guayaquil\&quot; - \&quot;America/Guyana\&quot; - \&quot;America/Halifax\&quot; - \&quot;America/Havana\&quot; - \&quot;America/Hermosillo\&quot; - \&quot;America/Indiana/Indianapolis\&quot; - \&quot;America/Indiana/Knox\&quot; - \&quot;America/Indiana/Marengo\&quot; - \&quot;America/Indiana/Petersburg\&quot; - \&quot;America/Indiana/Tell_City\&quot; - \&quot;America/Indiana/Vevay\&quot; - \&quot;America/Indiana/Vincennes\&quot; - \&quot;America/Indiana/Winamac\&quot; - \&quot;America/Indianapolis\&quot; - \&quot;America/Inuvik\&quot; - \&quot;America/Iqaluit\&quot; - \&quot;America/Jamaica\&quot; - \&quot;America/Jujuy\&quot; - \&quot;America/Juneau\&quot; - \&quot;America/Kentucky/Louisville\&quot; - \&quot;America/Kentucky/Monticello\&quot; - \&quot;America/Knox_IN\&quot; - \&quot;America/Kralendijk\&quot; - \&quot;America/La_Paz\&quot; - \&quot;America/Lima\&quot; - \&quot;America/Los_Angeles,\&quot; - \&quot;America/Louisville\&quot; - \&quot;America/Lower_Princes\&quot; - \&quot;America/Maceio\&quot; - \&quot;America/Managua\&quot; - \&quot;America/Manaus\&quot; - \&quot;America/Marigot\&quot; - \&quot;America/Martinique\&quot; - \&quot;America/Matamoros\&quot; - \&quot;America/Mazatlan\&quot; - \&quot;America/Mendoza\&quot; - \&quot;America/Menominee\&quot; - \&quot;America/Merida\&quot; - \&quot;America/Metlakatla\&quot; - \&quot;America/Mexico_City\&quot; - \&quot;America/Miquelon\&quot; - \&quot;America/Moncton\&quot; - \&quot;America/Monterrey\&quot; - \&quot;America/Montevideo\&quot; - \&quot;America/Montreal\&quot; - \&quot;America/Montserrat\&quot; - \&quot;America/Nassau\&quot; - \&quot;America/New_York\&quot; - \&quot;America/Nipigon\&quot; - \&quot;America/Nome\&quot; - \&quot;America/Noronha\&quot; - \&quot;America/North_Dakota/Beulah\&quot; - \&quot;America/North_Dakota/Center\&quot; - \&quot;America/North_Dakota/New_Salem\&quot; - \&quot;America/Ojinaga\&quot; - \&quot;America/Panama\&quot; - \&quot;America/Pangnirtung\&quot; - \&quot;America/Paramaribo\&quot; - \&quot;America/Phoenix\&quot; - \&quot;America/Port-au-Prince\&quot; - \&quot;America/Port_of_Spain\&quot; - \&quot;America/Porto_Acre\&quot; - \&quot;America/Porto_Velho\&quot; - \&quot;America/Puerto_Rico\&quot; - \&quot;America/Rainy_River\&quot; - \&quot;America/Rankin_Inlet\&quot; - \&quot;America/Recife\&quot; - \&quot;America/Regina\&quot; - \&quot;America/Resolute\&quot; - \&quot;America/Rio_Branco\&quot; - \&quot;America/Rosario\&quot; - \&quot;America/Santa_Isabel\&quot; - \&quot;America/Santarem\&quot; - \&quot;America/Santiago\&quot; - \&quot;America/Santo_Domingo\&quot; - \&quot;America/Sao_Paulo\&quot; - \&quot;America/Scoresbysund\&quot; - \&quot;America/Shiprock\&quot; - \&quot;America/Sitka\&quot; - \&quot;America/St_Barthelemy\&quot; - \&quot;America/St_Johns\&quot; - \&quot;America/St_Kitts\&quot; - \&quot;America/St_Lucia\&quot; - \&quot;America/St_Thomas\&quot; - \&quot;America/St_Vincent\&quot; - \&quot;America/Swift_Current\&quot; - \&quot;America/Tegucigalpa\&quot; - \&quot;America/Thule\&quot; - \&quot;America/Thunder_Bay\&quot; - \&quot;America/Tijuana,\&quot; - \&quot;America/Toronto\&quot; - \&quot;America/Tortola\&quot; - \&quot;America/Vancouver,\&quot; - \&quot;America/Virgin\&quot; - \&quot;America/Whitehorse,\&quot; - \&quot;America/Winnipeg\&quot; - \&quot;America/Yakutat\&quot; - \&quot;America/Yellowknife\&quot; - \&quot;Antarctica/Casey\&quot; - \&quot;Antarctica/Davis\&quot; - \&quot;Antarctica/DumontDUrville\&quot; - \&quot;Antarctica/Macquarie\&quot; - \&quot;Antarctica/Mawson\&quot; - \&quot;Antarctica/McMurdo\&quot; - \&quot;Antarctica/Palmer\&quot; - \&quot;Antarctica/Rothera\&quot; - \&quot;Antarctica/South_Pole\&quot; - \&quot;Antarctica/Syowa\&quot; - \&quot;Antarctica/Troll\&quot; - \&quot;Antarctica/Vostok\&quot; - \&quot;Arctic/Longyearbyen\&quot; - \&quot;Asia/Aden\&quot; - \&quot;Asia/Almaty\&quot; - \&quot;Asia/Amman\&quot; - \&quot;Asia/Anadyr\&quot; - \&quot;Asia/Aqtau\&quot; - \&quot;Asia/Aqtobe\&quot; - \&quot;Asia/Ashgabat\&quot; - \&quot;Asia/Ashkhabad\&quot; - \&quot;Asia/Baghdad\&quot; - \&quot;Asia/Bahrain\&quot; - \&quot;Asia/Baku\&quot; - \&quot;Asia/Bangkok\&quot; - \&quot;Asia/Barnaul\&quot; - \&quot;Asia/Beirut\&quot; - \&quot;Asia/Bishkek\&quot; - \&quot;Asia/Brunei\&quot; - \&quot;Asia/Calcutta\&quot; - \&quot;Asia/Chita\&quot; - \&quot;Asia/Choibalsan\&quot; - \&quot;Asia/Chongqing\&quot; - \&quot;Asia/Chungking\&quot; - \&quot;Asia/Colombo\&quot; - \&quot;Asia/Dacca\&quot; - \&quot;Asia/Damascus\&quot; - \&quot;Asia/Dhaka\&quot; - \&quot;Asia/Dili\&quot; - \&quot;Asia/Dubai\&quot; - \&quot;Asia/Dushanbe\&quot; - \&quot;Asia/Gaza\&quot; - \&quot;Asia/Harbin\&quot; - \&quot;Asia/Hebron\&quot; - \&quot;Asia/Ho_Chi_Minh\&quot; - \&quot;Asia/Hong_Kong\&quot; - \&quot;Asia/Hovd\&quot; - \&quot;Asia/Irkutsk\&quot; - \&quot;Asia/Istanbul\&quot; - \&quot;Asia/Jakarta\&quot; - \&quot;Asia/Jayapura\&quot; - \&quot;Asia/Jerusalem\&quot; - \&quot;Asia/Kabul\&quot; - \&quot;Asia/Kamchatka\&quot; - \&quot;Asia/Karachi\&quot; - \&quot;Asia/Kashgar\&quot; - \&quot;Asia/Kathmandu\&quot; - \&quot;Asia/Katmandu\&quot; - \&quot;Asia/Khandyga\&quot; - \&quot;Asia/Kolkata\&quot; - \&quot;Asia/Krasnoyarsk\&quot; - \&quot;Asia/Kuala_Lumpur\&quot; - \&quot;Asia/Kuching\&quot; - \&quot;Asia/Kuwait\&quot; - \&quot;Asia/Macao\&quot; - \&quot;Asia/Macau\&quot; - \&quot;Asia/Magadan\&quot; - \&quot;Asia/Makassar\&quot; - \&quot;Asia/Manila\&quot; - \&quot;Asia/Muscat\&quot; - \&quot;Asia/Nicosia\&quot; - \&quot;Asia/Novokuznetsk\&quot; - \&quot;Asia/Novosibirsk\&quot; - \&quot;Asia/Omsk\&quot; - \&quot;Asia/Oral\&quot; - \&quot;Asia/Phnom_Penh\&quot; - \&quot;Asia/Pontianak\&quot; - \&quot;Asia/Pyongyang\&quot; - \&quot;Asia/Qatar\&quot; - \&quot;Asia/Qyzylorda\&quot; - \&quot;Asia/Rangoon\&quot; - \&quot;Asia/Riyadh\&quot; - \&quot;Asia/Saigon\&quot; - \&quot;Asia/Sakhalin\&quot; - \&quot;Asia/Samarkand\&quot; - \&quot;Asia/Seoul\&quot; - \&quot;Asia/Shanghai\&quot; - \&quot;Asia/Singapore\&quot; - \&quot;Asia/Srednekolymsk\&quot; - \&quot;Asia/Taipei\&quot; - \&quot;Asia/Tashkent\&quot; - \&quot;Asia/Tbilisi\&quot; - \&quot;Asia/Tehran\&quot; - \&quot;Asia/Tel_Aviv\&quot; - \&quot;Asia/Thimbu\&quot; - \&quot;Asia/Thimphu\&quot; - \&quot;Asia/Tokyo\&quot; - \&quot;Asia/Tomsk\&quot; - \&quot;Asia/Ujung_Pandang\&quot; - \&quot;Asia/Ulaanbaatar\&quot; - \&quot;Asia/Ulan_Bator\&quot; - \&quot;Asia/Urumqi\&quot; - \&quot;Asia/Ust-Nera\&quot; - \&quot;Asia/Vientiane\&quot; - \&quot;Asia/Vladivostok\&quot; - \&quot;Asia/Yakutsk\&quot; - \&quot;Asia/Yekaterinburg\&quot; - \&quot;Asia/Yerevan\&quot; - \&quot;Atlantic/Azores\&quot; - \&quot;Atlantic/Bermuda\&quot; - \&quot;Atlantic/Canary\&quot; - \&quot;Atlantic/Cape_Verde\&quot; - \&quot;Atlantic/Faeroe\&quot; - \&quot;Atlantic/Faroe\&quot; - \&quot;Atlantic/Jan_Mayen\&quot; - \&quot;Atlantic/Madeira\&quot; - \&quot;Atlantic/Reykjavik\&quot; - \&quot;Atlantic/South_Georgia\&quot; - \&quot;Atlantic/St_Helena\&quot; - \&quot;Atlantic/Stanley\&quot; - \&quot;Australia/ACT\&quot; - \&quot;Australia/Adelaide\&quot; - \&quot;Australia/Brisbane\&quot; - \&quot;Australia/Broken_Hill\&quot; - \&quot;Australia/Canberra\&quot; - \&quot;Australia/Currie\&quot; - \&quot;Australia/Darwin\&quot; - \&quot;Australia/Eucla\&quot; - \&quot;Australia/Hobart\&quot; - \&quot;Australia/LHI\&quot; - \&quot;Australia/Lindeman\&quot; - \&quot;Australia/Lord_Howe\&quot; - \&quot;Australia/Melbourne\&quot; - \&quot;Australia/NSW\&quot; - \&quot;Australia/North\&quot; - \&quot;Australia/Perth\&quot; - \&quot;Australia/Queensland\&quot; - \&quot;Australia/South\&quot; - \&quot;Australia/Sydney\&quot; - \&quot;Australia/Tasmania\&quot; - \&quot;Australia/Victoria\&quot; - \&quot;Australia/West\&quot; - \&quot;Australia/Yancowinna\&quot; - \&quot;Brazil/Acre\&quot; - \&quot;Brazil/DeNoronha\&quot; - \&quot;Brazil/East\&quot; - \&quot;Brazil/West\&quot; - \&quot;CET\&quot; - \&quot;CST6CDT\&quot; - \&quot;Canada/Atlantic\&quot; - \&quot;Canada/Central\&quot; - \&quot;Canada/East-Saskatchewan\&quot; - \&quot;Canada/Eastern\&quot; - \&quot;Canada/Mountain\&quot; - \&quot;Canada/Newfoundland\&quot; - \&quot;Canada/Pacific,\&quot; - \&quot;Canada/Saskatchewan\&quot; - \&quot;Canada/Yukon,\&quot; - \&quot;Chile/Continental\&quot; - \&quot;Chile/EasterIsland\&quot; - \&quot;Cuba\&quot; - \&quot;EET\&quot; - \&quot;EST5EDT\&quot; - \&quot;Egypt\&quot; - \&quot;Eire\&quot; - \&quot;Etc/GMT\&quot; - \&quot;Etc/GMT+0\&quot; - \&quot;Etc/GMT+1\&quot; - \&quot;Etc/GMT+10\&quot; - \&quot;Etc/GMT+11\&quot; - \&quot;Etc/GMT+12\&quot; - \&quot;Etc/GMT+2\&quot; - \&quot;Etc/GMT+3\&quot; - \&quot;Etc/GMT+4\&quot; - \&quot;Etc/GMT+5\&quot; - \&quot;Etc/GMT+6\&quot; - \&quot;Etc/GMT+7\&quot; - \&quot;Etc/GMT+8,\&quot; - \&quot;Etc/GMT+9\&quot; - \&quot;Etc/GMT-0\&quot; - \&quot;Etc/GMT-1\&quot; - \&quot;Etc/GMT-10\&quot; - \&quot;Etc/GMT-11\&quot; - \&quot;Etc/GMT-12\&quot; - \&quot;Etc/GMT-13\&quot; - \&quot;Etc/GMT-14\&quot; - \&quot;Etc/GMT-2\&quot; - \&quot;Etc/GMT-3\&quot; - \&quot;Etc/GMT-4\&quot; - \&quot;Etc/GMT-5\&quot; - \&quot;Etc/GMT-6\&quot; - \&quot;Etc/GMT-7\&quot; - \&quot;Etc/GMT-8\&quot; - \&quot;Etc/GMT-9\&quot; - \&quot;Etc/GMT0\&quot; - \&quot;Etc/Greenwich\&quot; - \&quot;Etc/UCT\&quot; - \&quot;Etc/UTC\&quot; - \&quot;Etc/Universal\&quot; - \&quot;Etc/Zulu\&quot; - \&quot;Europe/Amsterdam\&quot; - \&quot;Europe/Andorra\&quot; - \&quot;Europe/Astrakhan\&quot; - \&quot;Europe/Athens\&quot; - \&quot;Europe/Belfast\&quot; - \&quot;Europe/Belgrade\&quot; - \&quot;Europe/Berlin\&quot; - \&quot;Europe/Bratislava\&quot; - \&quot;Europe/Brussels\&quot; - \&quot;Europe/Bucharest\&quot; - \&quot;Europe/Budapest\&quot; - \&quot;Europe/Busingen\&quot; - \&quot;Europe/Chisinau\&quot; - \&quot;Europe/Copenhagen\&quot; - \&quot;Europe/Dublin\&quot; - \&quot;Europe/Gibraltar\&quot; - \&quot;Europe/Guernsey\&quot; - \&quot;Europe/Helsinki\&quot; - \&quot;Europe/Isle_of_Man\&quot; - \&quot;Europe/Istanbul\&quot; - \&quot;Europe/Jersey\&quot; - \&quot;Europe/Kaliningrad\&quot; - \&quot;Europe/Kiev\&quot; - \&quot;Europe/Kirov\&quot; - \&quot;Europe/Lisbon\&quot; - \&quot;Europe/Ljubljana\&quot; - \&quot;Europe/London\&quot; - \&quot;Europe/Luxembourg\&quot; - \&quot;Europe/Madrid\&quot; - \&quot;Europe/Malta\&quot; - \&quot;Europe/Mariehamn\&quot; - \&quot;Europe/Minsk\&quot; - \&quot;Europe/Monaco\&quot; - \&quot;Europe/Moscow\&quot; - \&quot;Europe/Nicosia\&quot; - \&quot;Europe/Oslo\&quot; - \&quot;Europe/Paris\&quot; - \&quot;Europe/Podgorica\&quot; - \&quot;Europe/Prague\&quot; - \&quot;Europe/Riga\&quot; - \&quot;Europe/Rome\&quot; - \&quot;Europe/Samara\&quot; - \&quot;Europe/San_Marino\&quot; - \&quot;Europe/Sarajevo\&quot; - \&quot;Europe/Simferopol\&quot; - \&quot;Europe/Skopje\&quot; - \&quot;Europe/Sofia\&quot; - \&quot;Europe/Stockholm\&quot; - \&quot;Europe/Tallinn\&quot; - \&quot;Europe/Tirane\&quot; - \&quot;Europe/Tiraspol\&quot; - \&quot;Europe/Ulyanovsk\&quot; - \&quot;Europe/Uzhgorod\&quot; - \&quot;Europe/Vaduz\&quot; - \&quot;Europe/Vatican\&quot; - \&quot;Europe/Vienna\&quot; - \&quot;Europe/Vilnius\&quot; - \&quot;Europe/Volgograd\&quot; - \&quot;Europe/Warsaw\&quot; - \&quot;Europe/Zagreb\&quot; - \&quot;Europe/Zaporozhye\&quot; - \&quot;Europe/Zurich\&quot; - \&quot;GB\&quot; - \&quot;GB-Eire\&quot; - \&quot;GMT\&quot; - \&quot;GMT0\&quot; - \&quot;Greenwich\&quot; - \&quot;Hongkong\&quot; - \&quot;Iceland\&quot; - \&quot;Indian/Antananarivo\&quot; - \&quot;Indian/Chagos\&quot; - \&quot;Indian/Christmas\&quot; - \&quot;Indian/Cocos\&quot; - \&quot;Indian/Comoro\&quot; - \&quot;Indian/Kerguelen\&quot; - \&quot;Indian/Mahe\&quot; - \&quot;Indian/Maldives\&quot; - \&quot;Indian/Mauritius\&quot; - \&quot;Indian/Mayotte\&quot; - \&quot;Indian/Reunion\&quot; - \&quot;Iran\&quot; - \&quot;Israel\&quot; - \&quot;Jamaica\&quot; - \&quot;Japan\&quot; - \&quot;Kwajalein\&quot; - \&quot;Libya\&quot; - \&quot;MET\&quot; - \&quot;MST7MDT\&quot; - \&quot;Mexico/BajaNorte,\&quot; - \&quot;Mexico/BajaSur\&quot; - \&quot;Mexico/General\&quot; - \&quot;NZ\&quot; - \&quot;NZ-CHAT\&quot; - \&quot;Navajo\&quot; - \&quot;PRC\&quot; - \&quot;PST8PDT,\&quot; - \&quot;Pacific/Apia\&quot; - \&quot;Pacific/Auckland\&quot; - \&quot;Pacific/Bougainville\&quot; - \&quot;Pacific/Chatham\&quot; - \&quot;Pacific/Chuuk\&quot; - \&quot;Pacific/Easter\&quot; - \&quot;Pacific/Efate\&quot; - \&quot;Pacific/Enderbury\&quot; - \&quot;Pacific/Fakaofo\&quot; - \&quot;Pacific/Fiji\&quot; - \&quot;Pacific/Funafuti\&quot; - \&quot;Pacific/Galapagos\&quot; - \&quot;Pacific/Gambier\&quot; - \&quot;Pacific/Guadalcanal\&quot; - \&quot;Pacific/Guam\&quot; - \&quot;Pacific/Honolulu\&quot; - \&quot;Pacific/Johnston\&quot; - \&quot;Pacific/Kiritimati\&quot; - \&quot;Pacific/Kosrae\&quot; - \&quot;Pacific/Kwajalein\&quot; - \&quot;Pacific/Majuro\&quot; - \&quot;Pacific/Marquesas\&quot; - \&quot;Pacific/Midway\&quot; - \&quot;Pacific/Nauru\&quot; - \&quot;Pacific/Niue\&quot; - \&quot;Pacific/Norfolk\&quot; - \&quot;Pacific/Noumea\&quot; - \&quot;Pacific/Pago_Pago\&quot; - \&quot;Pacific/Palau\&quot; - \&quot;Pacific/Pitcairn,\&quot; - \&quot;Pacific/Pohnpei\&quot; - \&quot;Pacific/Ponape\&quot; - \&quot;Pacific/Port_Moresby\&quot; - \&quot;Pacific/Rarotonga\&quot; - \&quot;Pacific/Saipan\&quot; - \&quot;Pacific/Samoa\&quot; - \&quot;Pacific/Tahiti\&quot; - \&quot;Pacific/Tarawa\&quot; - \&quot;Pacific/Tongatapu\&quot; - \&quot;Pacific/Truk\&quot; - \&quot;Pacific/Wake\&quot; - \&quot;Pacific/Wallis\&quot; - \&quot;Pacific/Yap\&quot; - \&quot;Poland\&quot; - \&quot;Portugal\&quot; - \&quot;ROK\&quot; - \&quot;Singapore\&quot; - \&quot;SystemV/AST4\&quot; - \&quot;SystemV/AST4ADT\&quot; - \&quot;SystemV/CST6\&quot; - \&quot;SystemV/CST6CDT\&quot; - \&quot;SystemV/EST5\&quot; - \&quot;SystemV/EST5EDT\&quot; - \&quot;SystemV/HST10\&quot; - \&quot;SystemV/MST7\&quot; - \&quot;SystemV/MST7MDT\&quot; - \&quot;SystemV/PST8,\&quot; - \&quot;SystemV/PST8PDT,\&quot; - \&quot;SystemV/YST9\&quot; - \&quot;SystemV/YST9YDT\&quot; - \&quot;Turkey\&quot; - \&quot;UCT\&quot; - \&quot;US/Alaska\&quot; - \&quot;US/Aleutian\&quot; - \&quot;US/Arizona\&quot; - \&quot;US/Central\&quot; - \&quot;US/East-Indiana\&quot; - \&quot;US/Eastern\&quot; - \&quot;US/Hawaii\&quot; - \&quot;US/Indiana-Starke\&quot; - \&quot;US/Michigan\&quot; - \&quot;US/Mountain\&quot; - \&quot;US/Pacific,\&quot; - \&quot;US/Pacific-New,\&quot; - \&quot;US/Samoa\&quot; - \&quot;UTC\&quot; - \&quot;Universal\&quot; - \&quot;W-SU\&quot; - \&quot;WET\&quot; - \&quot;Zulu\&quot; - \&quot;EST\&quot; - \&quot;HST\&quot; - \&quot;MST\&quot; - \&quot;ACT\&quot; - \&quot;AET\&quot; - \&quot;AGT\&quot; - \&quot;ART\&quot; - \&quot;AST\&quot; - \&quot;BET\&quot; - \&quot;BST\&quot; - \&quot;CAT\&quot; - \&quot;CNT\&quot; - \&quot;CST\&quot; - \&quot;CTT\&quot; - \&quot;EAT\&quot; - \&quot;ECT\&quot; - \&quot;IET\&quot; - \&quot;IST\&quot; - \&quot;JST\&quot; - \&quot;MIT\&quot; - \&quot;NET\&quot; - \&quot;NST\&quot; - \&quot;PLT\&quot; - \&quot;PNT\&quot; - \&quot;PRT\&quot; - \&quot;PST\&quot; - \&quot;SST\&quot; - \&quot;VST\&quot; (required)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return void
     */
    public function entityApplyConfiguration($entity_id, $currency_code, $language, $timezone)
    {
        list($response) = $this->entityApplyConfigurationWithHttpInfo($entity_id, $currency_code, $language, $timezone);
        return $response;
    }

    /**
     * Operation entityApplyConfigurationWithHttpInfo
     *
     * 
     *
     * @param int $entity_id The id of the entity. (required)
     * @param string $currency_code The currency code to be selected between - EUR  - GBP  - USD  - AUD  - BRL  - NZD  - CAD  - CHF  - CNY  - DKK  - HKD  - INR  - JPY  - KRW  - LKR  - MXN  - MYR  - NOK  - SEK  - SGD  - THB  - TWD  - VEF  - ZAR  - BGN  - CZK  - EEK  - HUF  - LTL  - LVL  - PLN  - RON  - SKK  - ISK  - HRK  - RUB  - TRY  - PHP  - COP  - ARS  - RWF  - BIF  - CRC  - KES  - PEN  - DOP  - BYR  - UAH  - NAD  - GEL  - PRB  - MDL  - KZT  - MUR  - KGS  - IEP  - MKD  - RSD  - AZN  - MGA  - BAM  - TJS  - ALL  - SRD  - NIO  - GHS  - XAF  - GMD  - IQD  - IRR  - NGN  - AMD  - HTG  - GTQ  - ZMW  - GOLD (required)
     * @param string $language The language code to be selected between - ww-WW   - en-GB   - nl-NL   - de-DE   - tr-TR   - es-ES   - pt-PT   - pl-PL   - ka-GE   - hi-IN   - it-IT   - ar-AE   - el-GR   - zh-CN   - ru-KIN  - ro-RO   - ru-RU   - sk-SK   - cs-CZ   - sq-AL   - da-DK   - fi-FI   - fr-FR   - nb-NO   - sv-SE   - sl-SI   - hu-HU   - sw-KE   - ne-NE   - fr-bel  - du-bel  - es-DR   - es-CR   - uk-ukr  - ja-jpn  - ko-nko  - lt-lit  - et-est  - sa-afr  - es-COL  - bu-run  - ug-swa  - ta-swa  - na-afr  - bel-bel - ko-sko  - es-mex  - kk-kaz  - es-arg  - en-aus  - vi-vie  - lv-lav  - tl-tgl  - id-ind  - bel-rus - pan-sp  - cyp-gr  - bg-bul  - es-ven  - ru-mos  - ky-rus  - rb-RB   - uk-RU   - az-AZ   - mk-MKD (required)
     * @param string $timezone The timezone to be selected between - \&quot;Africa/Abidjan\&quot; - \&quot;Africa/Accra\&quot; - \&quot;Africa/Addis_Ababa\&quot; - \&quot;Africa/Algiers\&quot; - \&quot;Africa/Asmara\&quot; - \&quot;Africa/Asmera\&quot; - \&quot;Africa/Bamako\&quot; - \&quot;Africa/Bangui\&quot; - \&quot;Africa/Banjul\&quot; - \&quot;Africa/Bissau\&quot; - \&quot;Africa/Blantyre\&quot; - \&quot;Africa/Brazzaville\&quot; - \&quot;Africa/Bujumbura\&quot; - \&quot;Africa/Cairo\&quot; - \&quot;Africa/Casablanca\&quot; - \&quot;Africa/Ceuta\&quot; - \&quot;Africa/Conakry\&quot; - \&quot;Africa/Dakar\&quot; - \&quot;Africa/Dar_es_Salaam\&quot; - \&quot;Africa/Djibouti\&quot; - \&quot;Africa/Douala\&quot; - \&quot;Africa/El_Aaiun\&quot; - \&quot;Africa/Freetown\&quot; - \&quot;Africa/Gaborone\&quot; - \&quot;Africa/Harare\&quot; - \&quot;Africa/Johannesburg\&quot; - \&quot;Africa/Juba\&quot; - \&quot;Africa/Kampala\&quot; - \&quot;Africa/Khartoum\&quot; - \&quot;Africa/Kigali\&quot; - \&quot;Africa/Kinshasa\&quot; - \&quot;Africa/Lagos\&quot; - \&quot;Africa/Libreville\&quot; - \&quot;Africa/Lome\&quot; - \&quot;Africa/Luanda\&quot; - \&quot;Africa/Lubumbashi\&quot; - \&quot;Africa/Lusaka\&quot; - \&quot;Africa/Malabo\&quot; - \&quot;Africa/Maputo\&quot; - \&quot;Africa/Maseru\&quot; - \&quot;Africa/Mbabane\&quot; - \&quot;Africa/Mogadishu\&quot; - \&quot;Africa/Monrovia\&quot; - \&quot;Africa/Nairobi\&quot; - \&quot;Africa/Ndjamena\&quot; - \&quot;Africa/Niamey\&quot; - \&quot;Africa/Nouakchott\&quot; - \&quot;Africa/Ouagadougou\&quot; - \&quot;Africa/Porto-Novo\&quot; - \&quot;Africa/Sao_Tome\&quot; - \&quot;Africa/Timbuktu\&quot; - \&quot;Africa/Tripoli\&quot; - \&quot;Africa/Tunis\&quot; - \&quot;Africa/Windhoek\&quot; - \&quot;America/Adak\&quot; - \&quot;America/Anchorage\&quot; - \&quot;America/Anguilla\&quot; - \&quot;America/Antigua\&quot; - \&quot;America/Araguaina\&quot; - \&quot;America/Argentina/Buenos_Aires\&quot; - \&quot;America/Argentina/Catamarca\&quot; - \&quot;America/Argentina/ComodRivadavia\&quot; - \&quot;America/Argentina/Cordoba\&quot; - \&quot;America/Argentina/Jujuy\&quot; - \&quot;America/Argentina/La_Rioja\&quot; - \&quot;America/Argentina/Mendoza\&quot; - \&quot;America/Argentina/Rio_Gallegos\&quot; - \&quot;America/Argentina/Salta\&quot; - \&quot;America/Argentina/San_Juan\&quot; - \&quot;America/Argentina/San_Luis\&quot; - \&quot;America/Argentina/Tucuman\&quot; - \&quot;America/Argentina/Ushuaia\&quot; - \&quot;America/Aruba\&quot; - \&quot;America/Asuncion\&quot; - \&quot;America/Atikokan\&quot; - \&quot;America/Atka\&quot; - \&quot;America/Bahia\&quot; - \&quot;America/Bahia_Banderas\&quot; - \&quot;America/Barbados\&quot; - \&quot;America/Belem\&quot; - \&quot;America/Belize\&quot; - \&quot;America/Blanc-Sablon\&quot; - \&quot;America/Boa_Vista\&quot; - \&quot;America/Bogota\&quot; - \&quot;America/Boise\&quot; - \&quot;America/Buenos_Aires\&quot; - \&quot;America/Cambridge_Bay\&quot; - \&quot;America/Campo_Grande\&quot; - \&quot;America/Cancun\&quot; - \&quot;America/Caracas\&quot; - \&quot;America/Catamarca\&quot; - \&quot;America/Cayenne\&quot; - \&quot;America/Cayman\&quot; - \&quot;America/Chicago\&quot; - \&quot;America/Chihuahua\&quot; - \&quot;America/Coral_Harbour\&quot; - \&quot;America/Cordoba\&quot; - \&quot;America/Costa_Rica\&quot; - \&quot;America/Creston\&quot; - \&quot;America/Cuiaba\&quot; - \&quot;America/Curacao\&quot; - \&quot;America/Danmarkshavn\&quot; - \&quot;America/Dawson,\&quot; - \&quot;America/Dawson_Creek\&quot; - \&quot;America/Denver\&quot; - \&quot;America/Detroit\&quot; - \&quot;America/Dominica\&quot; - \&quot;America/Edmonton\&quot; - \&quot;America/Eirunepe\&quot; - \&quot;America/El_Salvador\&quot; - \&quot;America/Ensenada,\&quot; - \&quot;America/Fort_Nelson\&quot; - \&quot;America/Fort_Wayne\&quot; - \&quot;America/Fortaleza\&quot; - \&quot;America/Glace_Bay\&quot; - \&quot;America/Godthab\&quot; - \&quot;America/Goose_Bay\&quot; - \&quot;America/Grand_Turk\&quot; - \&quot;America/Grenada\&quot; - \&quot;America/Guadeloupe\&quot; - \&quot;America/Guatemala\&quot; - \&quot;America/Guayaquil\&quot; - \&quot;America/Guyana\&quot; - \&quot;America/Halifax\&quot; - \&quot;America/Havana\&quot; - \&quot;America/Hermosillo\&quot; - \&quot;America/Indiana/Indianapolis\&quot; - \&quot;America/Indiana/Knox\&quot; - \&quot;America/Indiana/Marengo\&quot; - \&quot;America/Indiana/Petersburg\&quot; - \&quot;America/Indiana/Tell_City\&quot; - \&quot;America/Indiana/Vevay\&quot; - \&quot;America/Indiana/Vincennes\&quot; - \&quot;America/Indiana/Winamac\&quot; - \&quot;America/Indianapolis\&quot; - \&quot;America/Inuvik\&quot; - \&quot;America/Iqaluit\&quot; - \&quot;America/Jamaica\&quot; - \&quot;America/Jujuy\&quot; - \&quot;America/Juneau\&quot; - \&quot;America/Kentucky/Louisville\&quot; - \&quot;America/Kentucky/Monticello\&quot; - \&quot;America/Knox_IN\&quot; - \&quot;America/Kralendijk\&quot; - \&quot;America/La_Paz\&quot; - \&quot;America/Lima\&quot; - \&quot;America/Los_Angeles,\&quot; - \&quot;America/Louisville\&quot; - \&quot;America/Lower_Princes\&quot; - \&quot;America/Maceio\&quot; - \&quot;America/Managua\&quot; - \&quot;America/Manaus\&quot; - \&quot;America/Marigot\&quot; - \&quot;America/Martinique\&quot; - \&quot;America/Matamoros\&quot; - \&quot;America/Mazatlan\&quot; - \&quot;America/Mendoza\&quot; - \&quot;America/Menominee\&quot; - \&quot;America/Merida\&quot; - \&quot;America/Metlakatla\&quot; - \&quot;America/Mexico_City\&quot; - \&quot;America/Miquelon\&quot; - \&quot;America/Moncton\&quot; - \&quot;America/Monterrey\&quot; - \&quot;America/Montevideo\&quot; - \&quot;America/Montreal\&quot; - \&quot;America/Montserrat\&quot; - \&quot;America/Nassau\&quot; - \&quot;America/New_York\&quot; - \&quot;America/Nipigon\&quot; - \&quot;America/Nome\&quot; - \&quot;America/Noronha\&quot; - \&quot;America/North_Dakota/Beulah\&quot; - \&quot;America/North_Dakota/Center\&quot; - \&quot;America/North_Dakota/New_Salem\&quot; - \&quot;America/Ojinaga\&quot; - \&quot;America/Panama\&quot; - \&quot;America/Pangnirtung\&quot; - \&quot;America/Paramaribo\&quot; - \&quot;America/Phoenix\&quot; - \&quot;America/Port-au-Prince\&quot; - \&quot;America/Port_of_Spain\&quot; - \&quot;America/Porto_Acre\&quot; - \&quot;America/Porto_Velho\&quot; - \&quot;America/Puerto_Rico\&quot; - \&quot;America/Rainy_River\&quot; - \&quot;America/Rankin_Inlet\&quot; - \&quot;America/Recife\&quot; - \&quot;America/Regina\&quot; - \&quot;America/Resolute\&quot; - \&quot;America/Rio_Branco\&quot; - \&quot;America/Rosario\&quot; - \&quot;America/Santa_Isabel\&quot; - \&quot;America/Santarem\&quot; - \&quot;America/Santiago\&quot; - \&quot;America/Santo_Domingo\&quot; - \&quot;America/Sao_Paulo\&quot; - \&quot;America/Scoresbysund\&quot; - \&quot;America/Shiprock\&quot; - \&quot;America/Sitka\&quot; - \&quot;America/St_Barthelemy\&quot; - \&quot;America/St_Johns\&quot; - \&quot;America/St_Kitts\&quot; - \&quot;America/St_Lucia\&quot; - \&quot;America/St_Thomas\&quot; - \&quot;America/St_Vincent\&quot; - \&quot;America/Swift_Current\&quot; - \&quot;America/Tegucigalpa\&quot; - \&quot;America/Thule\&quot; - \&quot;America/Thunder_Bay\&quot; - \&quot;America/Tijuana,\&quot; - \&quot;America/Toronto\&quot; - \&quot;America/Tortola\&quot; - \&quot;America/Vancouver,\&quot; - \&quot;America/Virgin\&quot; - \&quot;America/Whitehorse,\&quot; - \&quot;America/Winnipeg\&quot; - \&quot;America/Yakutat\&quot; - \&quot;America/Yellowknife\&quot; - \&quot;Antarctica/Casey\&quot; - \&quot;Antarctica/Davis\&quot; - \&quot;Antarctica/DumontDUrville\&quot; - \&quot;Antarctica/Macquarie\&quot; - \&quot;Antarctica/Mawson\&quot; - \&quot;Antarctica/McMurdo\&quot; - \&quot;Antarctica/Palmer\&quot; - \&quot;Antarctica/Rothera\&quot; - \&quot;Antarctica/South_Pole\&quot; - \&quot;Antarctica/Syowa\&quot; - \&quot;Antarctica/Troll\&quot; - \&quot;Antarctica/Vostok\&quot; - \&quot;Arctic/Longyearbyen\&quot; - \&quot;Asia/Aden\&quot; - \&quot;Asia/Almaty\&quot; - \&quot;Asia/Amman\&quot; - \&quot;Asia/Anadyr\&quot; - \&quot;Asia/Aqtau\&quot; - \&quot;Asia/Aqtobe\&quot; - \&quot;Asia/Ashgabat\&quot; - \&quot;Asia/Ashkhabad\&quot; - \&quot;Asia/Baghdad\&quot; - \&quot;Asia/Bahrain\&quot; - \&quot;Asia/Baku\&quot; - \&quot;Asia/Bangkok\&quot; - \&quot;Asia/Barnaul\&quot; - \&quot;Asia/Beirut\&quot; - \&quot;Asia/Bishkek\&quot; - \&quot;Asia/Brunei\&quot; - \&quot;Asia/Calcutta\&quot; - \&quot;Asia/Chita\&quot; - \&quot;Asia/Choibalsan\&quot; - \&quot;Asia/Chongqing\&quot; - \&quot;Asia/Chungking\&quot; - \&quot;Asia/Colombo\&quot; - \&quot;Asia/Dacca\&quot; - \&quot;Asia/Damascus\&quot; - \&quot;Asia/Dhaka\&quot; - \&quot;Asia/Dili\&quot; - \&quot;Asia/Dubai\&quot; - \&quot;Asia/Dushanbe\&quot; - \&quot;Asia/Gaza\&quot; - \&quot;Asia/Harbin\&quot; - \&quot;Asia/Hebron\&quot; - \&quot;Asia/Ho_Chi_Minh\&quot; - \&quot;Asia/Hong_Kong\&quot; - \&quot;Asia/Hovd\&quot; - \&quot;Asia/Irkutsk\&quot; - \&quot;Asia/Istanbul\&quot; - \&quot;Asia/Jakarta\&quot; - \&quot;Asia/Jayapura\&quot; - \&quot;Asia/Jerusalem\&quot; - \&quot;Asia/Kabul\&quot; - \&quot;Asia/Kamchatka\&quot; - \&quot;Asia/Karachi\&quot; - \&quot;Asia/Kashgar\&quot; - \&quot;Asia/Kathmandu\&quot; - \&quot;Asia/Katmandu\&quot; - \&quot;Asia/Khandyga\&quot; - \&quot;Asia/Kolkata\&quot; - \&quot;Asia/Krasnoyarsk\&quot; - \&quot;Asia/Kuala_Lumpur\&quot; - \&quot;Asia/Kuching\&quot; - \&quot;Asia/Kuwait\&quot; - \&quot;Asia/Macao\&quot; - \&quot;Asia/Macau\&quot; - \&quot;Asia/Magadan\&quot; - \&quot;Asia/Makassar\&quot; - \&quot;Asia/Manila\&quot; - \&quot;Asia/Muscat\&quot; - \&quot;Asia/Nicosia\&quot; - \&quot;Asia/Novokuznetsk\&quot; - \&quot;Asia/Novosibirsk\&quot; - \&quot;Asia/Omsk\&quot; - \&quot;Asia/Oral\&quot; - \&quot;Asia/Phnom_Penh\&quot; - \&quot;Asia/Pontianak\&quot; - \&quot;Asia/Pyongyang\&quot; - \&quot;Asia/Qatar\&quot; - \&quot;Asia/Qyzylorda\&quot; - \&quot;Asia/Rangoon\&quot; - \&quot;Asia/Riyadh\&quot; - \&quot;Asia/Saigon\&quot; - \&quot;Asia/Sakhalin\&quot; - \&quot;Asia/Samarkand\&quot; - \&quot;Asia/Seoul\&quot; - \&quot;Asia/Shanghai\&quot; - \&quot;Asia/Singapore\&quot; - \&quot;Asia/Srednekolymsk\&quot; - \&quot;Asia/Taipei\&quot; - \&quot;Asia/Tashkent\&quot; - \&quot;Asia/Tbilisi\&quot; - \&quot;Asia/Tehran\&quot; - \&quot;Asia/Tel_Aviv\&quot; - \&quot;Asia/Thimbu\&quot; - \&quot;Asia/Thimphu\&quot; - \&quot;Asia/Tokyo\&quot; - \&quot;Asia/Tomsk\&quot; - \&quot;Asia/Ujung_Pandang\&quot; - \&quot;Asia/Ulaanbaatar\&quot; - \&quot;Asia/Ulan_Bator\&quot; - \&quot;Asia/Urumqi\&quot; - \&quot;Asia/Ust-Nera\&quot; - \&quot;Asia/Vientiane\&quot; - \&quot;Asia/Vladivostok\&quot; - \&quot;Asia/Yakutsk\&quot; - \&quot;Asia/Yekaterinburg\&quot; - \&quot;Asia/Yerevan\&quot; - \&quot;Atlantic/Azores\&quot; - \&quot;Atlantic/Bermuda\&quot; - \&quot;Atlantic/Canary\&quot; - \&quot;Atlantic/Cape_Verde\&quot; - \&quot;Atlantic/Faeroe\&quot; - \&quot;Atlantic/Faroe\&quot; - \&quot;Atlantic/Jan_Mayen\&quot; - \&quot;Atlantic/Madeira\&quot; - \&quot;Atlantic/Reykjavik\&quot; - \&quot;Atlantic/South_Georgia\&quot; - \&quot;Atlantic/St_Helena\&quot; - \&quot;Atlantic/Stanley\&quot; - \&quot;Australia/ACT\&quot; - \&quot;Australia/Adelaide\&quot; - \&quot;Australia/Brisbane\&quot; - \&quot;Australia/Broken_Hill\&quot; - \&quot;Australia/Canberra\&quot; - \&quot;Australia/Currie\&quot; - \&quot;Australia/Darwin\&quot; - \&quot;Australia/Eucla\&quot; - \&quot;Australia/Hobart\&quot; - \&quot;Australia/LHI\&quot; - \&quot;Australia/Lindeman\&quot; - \&quot;Australia/Lord_Howe\&quot; - \&quot;Australia/Melbourne\&quot; - \&quot;Australia/NSW\&quot; - \&quot;Australia/North\&quot; - \&quot;Australia/Perth\&quot; - \&quot;Australia/Queensland\&quot; - \&quot;Australia/South\&quot; - \&quot;Australia/Sydney\&quot; - \&quot;Australia/Tasmania\&quot; - \&quot;Australia/Victoria\&quot; - \&quot;Australia/West\&quot; - \&quot;Australia/Yancowinna\&quot; - \&quot;Brazil/Acre\&quot; - \&quot;Brazil/DeNoronha\&quot; - \&quot;Brazil/East\&quot; - \&quot;Brazil/West\&quot; - \&quot;CET\&quot; - \&quot;CST6CDT\&quot; - \&quot;Canada/Atlantic\&quot; - \&quot;Canada/Central\&quot; - \&quot;Canada/East-Saskatchewan\&quot; - \&quot;Canada/Eastern\&quot; - \&quot;Canada/Mountain\&quot; - \&quot;Canada/Newfoundland\&quot; - \&quot;Canada/Pacific,\&quot; - \&quot;Canada/Saskatchewan\&quot; - \&quot;Canada/Yukon,\&quot; - \&quot;Chile/Continental\&quot; - \&quot;Chile/EasterIsland\&quot; - \&quot;Cuba\&quot; - \&quot;EET\&quot; - \&quot;EST5EDT\&quot; - \&quot;Egypt\&quot; - \&quot;Eire\&quot; - \&quot;Etc/GMT\&quot; - \&quot;Etc/GMT+0\&quot; - \&quot;Etc/GMT+1\&quot; - \&quot;Etc/GMT+10\&quot; - \&quot;Etc/GMT+11\&quot; - \&quot;Etc/GMT+12\&quot; - \&quot;Etc/GMT+2\&quot; - \&quot;Etc/GMT+3\&quot; - \&quot;Etc/GMT+4\&quot; - \&quot;Etc/GMT+5\&quot; - \&quot;Etc/GMT+6\&quot; - \&quot;Etc/GMT+7\&quot; - \&quot;Etc/GMT+8,\&quot; - \&quot;Etc/GMT+9\&quot; - \&quot;Etc/GMT-0\&quot; - \&quot;Etc/GMT-1\&quot; - \&quot;Etc/GMT-10\&quot; - \&quot;Etc/GMT-11\&quot; - \&quot;Etc/GMT-12\&quot; - \&quot;Etc/GMT-13\&quot; - \&quot;Etc/GMT-14\&quot; - \&quot;Etc/GMT-2\&quot; - \&quot;Etc/GMT-3\&quot; - \&quot;Etc/GMT-4\&quot; - \&quot;Etc/GMT-5\&quot; - \&quot;Etc/GMT-6\&quot; - \&quot;Etc/GMT-7\&quot; - \&quot;Etc/GMT-8\&quot; - \&quot;Etc/GMT-9\&quot; - \&quot;Etc/GMT0\&quot; - \&quot;Etc/Greenwich\&quot; - \&quot;Etc/UCT\&quot; - \&quot;Etc/UTC\&quot; - \&quot;Etc/Universal\&quot; - \&quot;Etc/Zulu\&quot; - \&quot;Europe/Amsterdam\&quot; - \&quot;Europe/Andorra\&quot; - \&quot;Europe/Astrakhan\&quot; - \&quot;Europe/Athens\&quot; - \&quot;Europe/Belfast\&quot; - \&quot;Europe/Belgrade\&quot; - \&quot;Europe/Berlin\&quot; - \&quot;Europe/Bratislava\&quot; - \&quot;Europe/Brussels\&quot; - \&quot;Europe/Bucharest\&quot; - \&quot;Europe/Budapest\&quot; - \&quot;Europe/Busingen\&quot; - \&quot;Europe/Chisinau\&quot; - \&quot;Europe/Copenhagen\&quot; - \&quot;Europe/Dublin\&quot; - \&quot;Europe/Gibraltar\&quot; - \&quot;Europe/Guernsey\&quot; - \&quot;Europe/Helsinki\&quot; - \&quot;Europe/Isle_of_Man\&quot; - \&quot;Europe/Istanbul\&quot; - \&quot;Europe/Jersey\&quot; - \&quot;Europe/Kaliningrad\&quot; - \&quot;Europe/Kiev\&quot; - \&quot;Europe/Kirov\&quot; - \&quot;Europe/Lisbon\&quot; - \&quot;Europe/Ljubljana\&quot; - \&quot;Europe/London\&quot; - \&quot;Europe/Luxembourg\&quot; - \&quot;Europe/Madrid\&quot; - \&quot;Europe/Malta\&quot; - \&quot;Europe/Mariehamn\&quot; - \&quot;Europe/Minsk\&quot; - \&quot;Europe/Monaco\&quot; - \&quot;Europe/Moscow\&quot; - \&quot;Europe/Nicosia\&quot; - \&quot;Europe/Oslo\&quot; - \&quot;Europe/Paris\&quot; - \&quot;Europe/Podgorica\&quot; - \&quot;Europe/Prague\&quot; - \&quot;Europe/Riga\&quot; - \&quot;Europe/Rome\&quot; - \&quot;Europe/Samara\&quot; - \&quot;Europe/San_Marino\&quot; - \&quot;Europe/Sarajevo\&quot; - \&quot;Europe/Simferopol\&quot; - \&quot;Europe/Skopje\&quot; - \&quot;Europe/Sofia\&quot; - \&quot;Europe/Stockholm\&quot; - \&quot;Europe/Tallinn\&quot; - \&quot;Europe/Tirane\&quot; - \&quot;Europe/Tiraspol\&quot; - \&quot;Europe/Ulyanovsk\&quot; - \&quot;Europe/Uzhgorod\&quot; - \&quot;Europe/Vaduz\&quot; - \&quot;Europe/Vatican\&quot; - \&quot;Europe/Vienna\&quot; - \&quot;Europe/Vilnius\&quot; - \&quot;Europe/Volgograd\&quot; - \&quot;Europe/Warsaw\&quot; - \&quot;Europe/Zagreb\&quot; - \&quot;Europe/Zaporozhye\&quot; - \&quot;Europe/Zurich\&quot; - \&quot;GB\&quot; - \&quot;GB-Eire\&quot; - \&quot;GMT\&quot; - \&quot;GMT0\&quot; - \&quot;Greenwich\&quot; - \&quot;Hongkong\&quot; - \&quot;Iceland\&quot; - \&quot;Indian/Antananarivo\&quot; - \&quot;Indian/Chagos\&quot; - \&quot;Indian/Christmas\&quot; - \&quot;Indian/Cocos\&quot; - \&quot;Indian/Comoro\&quot; - \&quot;Indian/Kerguelen\&quot; - \&quot;Indian/Mahe\&quot; - \&quot;Indian/Maldives\&quot; - \&quot;Indian/Mauritius\&quot; - \&quot;Indian/Mayotte\&quot; - \&quot;Indian/Reunion\&quot; - \&quot;Iran\&quot; - \&quot;Israel\&quot; - \&quot;Jamaica\&quot; - \&quot;Japan\&quot; - \&quot;Kwajalein\&quot; - \&quot;Libya\&quot; - \&quot;MET\&quot; - \&quot;MST7MDT\&quot; - \&quot;Mexico/BajaNorte,\&quot; - \&quot;Mexico/BajaSur\&quot; - \&quot;Mexico/General\&quot; - \&quot;NZ\&quot; - \&quot;NZ-CHAT\&quot; - \&quot;Navajo\&quot; - \&quot;PRC\&quot; - \&quot;PST8PDT,\&quot; - \&quot;Pacific/Apia\&quot; - \&quot;Pacific/Auckland\&quot; - \&quot;Pacific/Bougainville\&quot; - \&quot;Pacific/Chatham\&quot; - \&quot;Pacific/Chuuk\&quot; - \&quot;Pacific/Easter\&quot; - \&quot;Pacific/Efate\&quot; - \&quot;Pacific/Enderbury\&quot; - \&quot;Pacific/Fakaofo\&quot; - \&quot;Pacific/Fiji\&quot; - \&quot;Pacific/Funafuti\&quot; - \&quot;Pacific/Galapagos\&quot; - \&quot;Pacific/Gambier\&quot; - \&quot;Pacific/Guadalcanal\&quot; - \&quot;Pacific/Guam\&quot; - \&quot;Pacific/Honolulu\&quot; - \&quot;Pacific/Johnston\&quot; - \&quot;Pacific/Kiritimati\&quot; - \&quot;Pacific/Kosrae\&quot; - \&quot;Pacific/Kwajalein\&quot; - \&quot;Pacific/Majuro\&quot; - \&quot;Pacific/Marquesas\&quot; - \&quot;Pacific/Midway\&quot; - \&quot;Pacific/Nauru\&quot; - \&quot;Pacific/Niue\&quot; - \&quot;Pacific/Norfolk\&quot; - \&quot;Pacific/Noumea\&quot; - \&quot;Pacific/Pago_Pago\&quot; - \&quot;Pacific/Palau\&quot; - \&quot;Pacific/Pitcairn,\&quot; - \&quot;Pacific/Pohnpei\&quot; - \&quot;Pacific/Ponape\&quot; - \&quot;Pacific/Port_Moresby\&quot; - \&quot;Pacific/Rarotonga\&quot; - \&quot;Pacific/Saipan\&quot; - \&quot;Pacific/Samoa\&quot; - \&quot;Pacific/Tahiti\&quot; - \&quot;Pacific/Tarawa\&quot; - \&quot;Pacific/Tongatapu\&quot; - \&quot;Pacific/Truk\&quot; - \&quot;Pacific/Wake\&quot; - \&quot;Pacific/Wallis\&quot; - \&quot;Pacific/Yap\&quot; - \&quot;Poland\&quot; - \&quot;Portugal\&quot; - \&quot;ROK\&quot; - \&quot;Singapore\&quot; - \&quot;SystemV/AST4\&quot; - \&quot;SystemV/AST4ADT\&quot; - \&quot;SystemV/CST6\&quot; - \&quot;SystemV/CST6CDT\&quot; - \&quot;SystemV/EST5\&quot; - \&quot;SystemV/EST5EDT\&quot; - \&quot;SystemV/HST10\&quot; - \&quot;SystemV/MST7\&quot; - \&quot;SystemV/MST7MDT\&quot; - \&quot;SystemV/PST8,\&quot; - \&quot;SystemV/PST8PDT,\&quot; - \&quot;SystemV/YST9\&quot; - \&quot;SystemV/YST9YDT\&quot; - \&quot;Turkey\&quot; - \&quot;UCT\&quot; - \&quot;US/Alaska\&quot; - \&quot;US/Aleutian\&quot; - \&quot;US/Arizona\&quot; - \&quot;US/Central\&quot; - \&quot;US/East-Indiana\&quot; - \&quot;US/Eastern\&quot; - \&quot;US/Hawaii\&quot; - \&quot;US/Indiana-Starke\&quot; - \&quot;US/Michigan\&quot; - \&quot;US/Mountain\&quot; - \&quot;US/Pacific,\&quot; - \&quot;US/Pacific-New,\&quot; - \&quot;US/Samoa\&quot; - \&quot;UTC\&quot; - \&quot;Universal\&quot; - \&quot;W-SU\&quot; - \&quot;WET\&quot; - \&quot;Zulu\&quot; - \&quot;EST\&quot; - \&quot;HST\&quot; - \&quot;MST\&quot; - \&quot;ACT\&quot; - \&quot;AET\&quot; - \&quot;AGT\&quot; - \&quot;ART\&quot; - \&quot;AST\&quot; - \&quot;BET\&quot; - \&quot;BST\&quot; - \&quot;CAT\&quot; - \&quot;CNT\&quot; - \&quot;CST\&quot; - \&quot;CTT\&quot; - \&quot;EAT\&quot; - \&quot;ECT\&quot; - \&quot;IET\&quot; - \&quot;IST\&quot; - \&quot;JST\&quot; - \&quot;MIT\&quot; - \&quot;NET\&quot; - \&quot;NST\&quot; - \&quot;PLT\&quot; - \&quot;PNT\&quot; - \&quot;PRT\&quot; - \&quot;PST\&quot; - \&quot;SST\&quot; - \&quot;VST\&quot; (required)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return array of null, HTTP status code, HTTP response headers (array of strings)
     */
    public function entityApplyConfigurationWithHttpInfo($entity_id, $currency_code, $language, $timezone)
    {
        // verify the required parameter 'entity_id' is set
        if ($entity_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $entity_id when calling entityApplyConfiguration');
        }
        // verify the required parameter 'currency_code' is set
        if ($currency_code === null) {
            throw new \InvalidArgumentException('Missing the required parameter $currency_code when calling entityApplyConfiguration');
        }
        // verify the required parameter 'language' is set
        if ($language === null) {
            throw new \InvalidArgumentException('Missing the required parameter $language when calling entityApplyConfiguration');
        }
        // verify the required parameter 'timezone' is set
        if ($timezone === null) {
            throw new \InvalidArgumentException('Missing the required parameter $timezone when calling entityApplyConfiguration');
        }
        // parse inputs
        $resourcePath = "/entity/applyConfiguration/localization";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($entity_id !== null) {
            $queryParams['entityId'] = $this->apiClient->getSerializer()->toQueryValue($entity_id);
        }
        // query params
        if ($currency_code !== null) {
            $queryParams['currencyCode'] = $this->apiClient->getSerializer()->toQueryValue($currency_code);
        }
        // query params
        if ($language !== null) {
            $queryParams['language'] = $this->apiClient->getSerializer()->toQueryValue($language);
        }
        // query params
        if ($timezone !== null) {
            $queryParams['timezone'] = $this->apiClient->getSerializer()->toQueryValue($timezone);
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        
        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (oldCount($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiHash');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiHash'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiId');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiId'] = $apiKey;
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'POST',
                $queryParams,
                $httpBody,
                $headerParams,
                null,
                '/entity/applyConfiguration/localization'
            );

            return [null, $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 501:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 510:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation entityFind
     *
     * 
     *
     * @param int $entity_parent_id The parent entity id. (required)
     * @param string $reg_exp Regular expression that is used to search for the entity name among all the entities to which we have access. (required)
     * @param string $ext_id External unique id of account, for 3rd party integrations. (optional)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return \Swagger\Client\Model\AuthResultClient[]
     */
    public function entityFind($entity_parent_id, $reg_exp, $ext_id = null)
    {
        list($response) = $this->entityFindWithHttpInfo($entity_parent_id, $reg_exp, $ext_id);
        return $response;
    }

    /**
     * Operation entityFindWithHttpInfo
     *
     * 
     *
     * @param int $entity_parent_id The parent entity id. (required)
     * @param string $reg_exp Regular expression that is used to search for the entity name among all the entities to which we have access. (required)
     * @param string $ext_id External unique id of account, for 3rd party integrations. (optional)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return array of \Swagger\Client\Model\AuthResultClient[], HTTP status code, HTTP response headers (array of strings)
     */
    public function entityFindWithHttpInfo($entity_parent_id, $reg_exp, $ext_id = null)
    {
        // verify the required parameter 'entity_parent_id' is set
        if ($entity_parent_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $entity_parent_id when calling entityFind');
        }
        // verify the required parameter 'reg_exp' is set
        if ($reg_exp === null) {
            throw new \InvalidArgumentException('Missing the required parameter $reg_exp when calling entityFind');
        }
        // parse inputs
        $resourcePath = "/entity/find";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($entity_parent_id !== null) {
            $queryParams['entityParentId'] = $this->apiClient->getSerializer()->toQueryValue($entity_parent_id);
        }
        // query params
        if ($reg_exp !== null) {
            $queryParams['regExp'] = $this->apiClient->getSerializer()->toQueryValue($reg_exp);
        }
        // query params
        if ($ext_id !== null) {
            $queryParams['extId'] = $this->apiClient->getSerializer()->toQueryValue($ext_id);
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        
        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (oldCount($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiHash');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiHash'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiId');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiId'] = $apiKey;
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Swagger\Client\Model\AuthResultClient[]',
                '/entity/find'
            );

            return [$this->apiClient->getSerializer()->deserialize($response, '\Swagger\Client\Model\AuthResultClient[]', $httpHeader), $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\AuthResultClient[]', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 510:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }

    /**
     * Operation entityFindById
     *
     * 
     *
     * @param int $entity_parent_id The parent entity id. (required)
     * @param int $entity_id The id of the entity. (required)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return \Swagger\Client\Model\AuthResultClient
     */
    public function entityFindById($entity_parent_id, $entity_id)
    {
        list($response) = $this->entityFindByIdWithHttpInfo($entity_parent_id, $entity_id);
        return $response;
    }

    /**
     * Operation entityFindByIdWithHttpInfo
     *
     * 
     *
     * @param int $entity_parent_id The parent entity id. (required)
     * @param int $entity_id The id of the entity. (required)
     * @throws \Swagger\Client\ApiException on non-2xx response
     * @return array of \Swagger\Client\Model\AuthResultClient, HTTP status code, HTTP response headers (array of strings)
     */
    public function entityFindByIdWithHttpInfo($entity_parent_id, $entity_id)
    {
        // verify the required parameter 'entity_parent_id' is set
        if ($entity_parent_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $entity_parent_id when calling entityFindById');
        }
        // verify the required parameter 'entity_id' is set
        if ($entity_id === null) {
            throw new \InvalidArgumentException('Missing the required parameter $entity_id when calling entityFindById');
        }
        // parse inputs
        $resourcePath = "/entity/findById";
        $httpBody = '';
        $queryParams = [];
        $headerParams = [];
        $formParams = [];
        $_header_accept = $this->apiClient->selectHeaderAccept(['application/json']);
        if (!is_null($_header_accept)) {
            $headerParams['Accept'] = $_header_accept;
        }
        $headerParams['Content-Type'] = $this->apiClient->selectHeaderContentType([]);

        // query params
        if ($entity_parent_id !== null) {
            $queryParams['entityParentId'] = $this->apiClient->getSerializer()->toQueryValue($entity_parent_id);
        }
        // query params
        if ($entity_id !== null) {
            $queryParams['entityId'] = $this->apiClient->getSerializer()->toQueryValue($entity_id);
        }
        // default format to json
        $resourcePath = str_replace("{format}", "json", $resourcePath);

        
        // for model (json/xml)
        if (isset($_tempBody)) {
            $httpBody = $_tempBody; // $_tempBody is the method argument, if present
        } elseif (oldCount($formParams) > 0) {
            $httpBody = $formParams; // for HTTP post (form)
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiHash');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiHash'] = $apiKey;
        }
        // this endpoint requires API key authentication
        $apiKey = $this->apiClient->getApiKeyWithPrefix('apiId');
        if (strlen($apiKey) !== 0) {
            $headerParams['apiId'] = $apiKey;
        }
        // make the API Call
        try {
            list($response, $statusCode, $httpHeader) = $this->apiClient->callApi(
                $resourcePath,
                'GET',
                $queryParams,
                $httpBody,
                $headerParams,
                '\Swagger\Client\Model\AuthResultClient',
                '/entity/findById'
            );

            return [$this->apiClient->getSerializer()->deserialize($response, '\Swagger\Client\Model\AuthResultClient', $httpHeader), $statusCode, $httpHeader];
        } catch (ApiException $e) {
            switch ($e->getCode()) {
                case 200:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\AuthResultClient', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 401:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 404:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
                case 510:
                    $data = $this->apiClient->getSerializer()->deserialize($e->getResponseBody(), '\Swagger\Client\Model\ErrorInfo', $e->getResponseHeaders());
                    $e->setResponseObject($data);
                    break;
            }

            throw $e;
        }
    }
}
